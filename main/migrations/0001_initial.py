# Generated by Django 4.1.2 on 2023-09-14 09:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=555, verbose_name='Текст варианта ответа')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответов',
            },
        ),
        migrations.CreateModel(
            name='Archetype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archetype_name', models.CharField(max_length=255, verbose_name='Название архетипа')),
                ('archetype_description', models.TextField(verbose_name='Описание архетипа')),
            ],
            options={
                'verbose_name': 'Совместимость',
                'verbose_name_plural': 'Наборы совместимости разных архетипов',
            },
        ),
        migrations.CreateModel(
            name='promoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeName', models.CharField(max_length=1000, verbose_name='Название промокода')),
                ('userId', models.IntegerField(null=True, verbose_name='ID пользователя')),
                ('limits', models.IntegerField(verbose_name='Количество запросов')),
                ('isActive', models.BooleanField(default=False, verbose_name='Активен')),
                ('activationDate', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Промо-код',
                'verbose_name_plural': 'Промо-коды',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст вопроса')),
                ('order', models.PositiveIntegerField(verbose_name='Порядковый номер вопроса')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Related_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_user_id', models.IntegerField(verbose_name='ID первого пользователя')),
                ('second_user_id', models.IntegerField(verbose_name='ID второго пользователя')),
            ],
            options={
                'verbose_name': 'Модель связанных пользователей',
                'verbose_name_plural': 'Модель связанных пользователей',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(verbose_name='ID пользователя')),
                ('date_time', models.DateTimeField(auto_now=True, verbose_name='Дата начала теста')),
                ('status', models.CharField(choices=[('completed', 'Завершен'), ('pending', 'В процессе')], max_length=10, verbose_name='Статус теста')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.CreateModel(
            name='Сompatibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cap_index', models.IntegerField(verbose_name='Индекс совместимости')),
                ('first_user_description', models.CharField(max_length=500, verbose_name='Отчет о совместимости для первого пользователя')),
                ('first_arch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_arch_compat', to='main.archetype', verbose_name='Архетип первого пользователя')),
                ('second_arch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_arch_compat', to='main.archetype', verbose_name='Архетип второго пользователя')),
            ],
            options={
                'verbose_name': 'Совместимость',
                'verbose_name_plural': 'Наборы совместимости разных архетипов',
            },
        ),
        migrations.CreateModel(
            name='Test_process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_process', to='main.answer', verbose_name='Ответ')),
                ('first_arch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_arch_process', to='main.archetype', verbose_name='Архетип первого пользователя')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_process', to='main.question', verbose_name='Вопрос')),
                ('second_arch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_arch_process', to='main.archetype', verbose_name='Архетип второго пользователя')),
                ('test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_id_process', to='main.test', verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Ответы теста',
                'verbose_name_plural': 'Ответы теста',
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='first_arch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_arch_answer', to='main.archetype', verbose_name='Архетип первого пользователя'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_question', to='main.question', verbose_name='Вопрос'),
        ),
        migrations.AddField(
            model_name='answer',
            name='second_arch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_arch_answer', to='main.archetype', verbose_name='Архетип второго пользователя'),
        ),
    ]
